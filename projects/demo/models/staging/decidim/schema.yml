
version: 2


sources:
  - name: decidim
    database: "{{ env_var('DBNAME') }}"
    schema: public  
    tables:
      - name: decidim_components
      - name: decidim_assemblies
      - name: decidim_participatory_processes
      - name: decidim_participatory_process_steps
      - name: decidim_users
      - name: decidim_proposals_proposals
      - name: decidim_coauthorships
      - name: decidim_moderations
      - name: decidim_scopes
      - name: decidim_blogs_posts
      - name: decidim_debates_debates
      - name: decidim_meetings_meetings
      - name: decidim_accountability_results
      - name: decidim_comments_comments
      - name: decidim_proposals_collaborative_drafts
      - name: decidim_endorsements
      - name: decidim_follows
      - name: decidim_initiatives
      - name: decidim_initiatives_votes
      - name: decidim_initiatives_type_scopes
      - name: decidim_surveys_surveys
      - name: decidim_attachments
      - name: decidim_proposals_proposal_votes
      - name: decidim_meetings_registrations
      - name: decidim_user_moderations
      - name: decidim_user_reports

unit_tests:
  - name: extended_data_parsing_check
    description: "Checking if the json in extended data is correctly extracted"
    model: stg_decidim_users
    given:
      - input: source('decidim', 'decidim_users')
        format: dict
        rows:
          - {id: 1, extended_data: "{\"user_name\": \"Blocked user\", \"spam_detection\": {\"blocked_at\": \"2024-11-14T16:54:37.332+01:00\", \"reported_at\": \"2024-10-11T07:16:38.010+02:00\", \"spam_probability\": 0.99}}"}

    expect:
      format: dict
      rows:
          - {id: 1, spam_probability: 0.99, spam_report_timestamp: "2024-10-11T07:16:38.010+02:00"}



