version: 2

models:
  - name: int_users
    schema: "{{ env_var('TARGET_SCHEMA') }}"
    description: ""
    columns:
      - name: id
        description: "The unique identifier for a user"
        tests:
          - unique
          - not_null
      - name: email
        description: "The user's email address"
      - name: nickname
        description: "The user's nickname"
        tests:
          - not_null
      - name: spam
        description: "Indicates if the user has been reported or not"
      - name: spam_probability
        description: "When a user has been reported as spam, gives the coefficient of spam likelihood, comprised between 0 and 1"
        data_tests: 
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
              config:
                where: "spam IS NOT null"  
      - name: spam_reported_at
        description: "When a user has been reported as spam, gives the report date"
      - name: gender
        description: "The gender of the user"
        tests:
          - not_null
          - accepted_values:
              values: ['male', 'female', 'other']

unit_tests:
  - name: type_check
    description: "Check that the type contains Decidim::User"
    model: int_users
    given:
      - input: ref('stg_decidim_users')
        format: dict
        rows:
          - {id: 1, type: "Decidim::User"}
          - {id: 2, type: "Decidim::Admin"}
          - {id: 3, type: "Decidim::Admin, Decidim::User"}
    expect:
      format: dict
      rows:
          - {id: 1}

  - name: sign_in_frequency_check_multilingual
    description: "Test that the sign-in frequency is properly calculated for Dutch."
    model: int_users
    overrides:
      vars:
        DBT_LANG: 'nl'
    given:
      - input: ref('stg_decidim_users')
        format: dict
        rows:
          - {sign_in_count: 0, type: Decidim::User}
          - {sign_in_count: 1, type: Decidim::User}
          - {sign_in_count: 2, type: Decidim::User}
          - {sign_in_count: 10, type: Decidim::User}
          - {sign_in_count: 11, type: Decidim::User}
    expect:
        format: dict
        rows:
          - {sign_in_frequency: 'Nooit'}
          - {sign_in_frequency: 'EÃ©n keer'}
          - {sign_in_frequency: 'Twee keer'}
          - {sign_in_frequency: 'Tussen 2 en 10 keer'}
          - {sign_in_frequency: 'Meer dan 10 keer'}


  - name: spam_detection_check
    description: "Checks if the presence of spam is correctly parsed or not"
    model: int_users
    given:
      - input: ref('stg_decidim_users')
        format: dict
        rows:
          - {id: 1, type: 'Decidim::User', spam_probability: 0.9994} 
          - {id: 2, type: 'Decidim::User', spam_probability: null}        
    expect:
      format: dict
      rows:
          - {id: 1, spam: "true"}
          - {id: 2, spam: "false"}
  - name: gender_translation_fr
    description: "Test that the gender is translated correctly to French."
    model: int_users
    overrides:
      vars:
        DBT_LANG: 'fr'  
    given:
      - input: ref('stg_decidim_users')
        format: dict
        rows:
          - {id: 1,type: 'Decidim::User', gender: 'male'}
          - {id: 2,type: 'Decidim::User', gender: 'female'}
          - {id: 3,type: 'Decidim::User', gender: 'other'}
          - {id: 4,type: 'Decidim::User', gender: null}  
    expect:
        format: dict
        rows:
          - {id: 1, gender: 'Homme'}
          - {id: 2, gender: 'Femme'}
          - {id: 3, gender: 'Autre'}
          - {id: 4, gender: 'Inconnu'}  
