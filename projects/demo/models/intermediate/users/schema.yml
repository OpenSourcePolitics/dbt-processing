version: 2

models:
  - name: int_users
    schema: "{{ env_var('TARGET_SCHEMA') }}"
    description: ""
    config:
      contract: {enforced: true}
    columns:
      - name: id
        data_type: BIGINT
        description: "The unique identifier for a user"
        constraints:
          - type: unique
          - type: not_null
          - type: primary_key
      - name: email
        data_type: TEXT
        description: "The user's email address"
      - name: sign_in_count
        data_type: BIGINT
      - name: sign_in_frequency
        data_type: TEXT
      - name: current_sign_in_at
        data_type: TIMESTAMP
      - name: last_sign_in_at
        data_type: TIMESTAMP
      - name: created_at
        data_type: TIMESTAMP
      - name: updated_at
        data_type: TIMESTAMP
      - name: invitation_created_at
        data_type: TIMESTAMP
      - name: invitation_sent_at
        data_type: TIMESTAMP
      - name: invitation_accepted_at
        data_type: TIMESTAMP
      - name: invited_by_id
        data_type: BIGINT
      - name: invited_by_type
        data_type: TEXT
      - name: decidim_organization_id
        data_type: BIGINT
      - name: confirmed_at
        data_type: TIMESTAMP
      - name: confirmation_token
        data_type: TEXT
      - name: unconfirmed_email
        data_type: TEXT
      - name: name
        data_type: TEXT
      - name: locale
        data_type: TEXT
      - name: deleted_at
        data_type: TIMESTAMP
      - name: admin
        data_type: BOOL
      - name: managed
        data_type: BOOL
      - name: roles
        data_type: TEXT
      - name: nickname
        data_type: TEXT
        description: "The user's nickname"
        tests:
          - not_null
      - name: accepted_tos_version
        data_type: TIMESTAMP
      - name: type
        data_type: TEXT
      - name: following_count
        data_type: BIGINT
      - name: followers_count
        data_type: BIGINT
      - name: failed_attempts
        data_type: BIGINT
      - name: locked_at
        data_type: TIMESTAMP
      - name: admin_terms_accepted_at
        data_type: TIMESTAMP
      - name: blocked
        data_type: BOOL
      - name: blocked_at
        data_type: TIMESTAMP
      - name: date_of_birth
        data_type: TEXT
      - name: gender
        data_type: TEXT
      - name: postal_code
        data_type: TEXT
      - name: confirmed
        data_type: BOOL
      - name: spam
        data_type: BOOL
        description: "Indicates if the user has been reported or not"
      - name: spam_probability
        data_type: FLOAT
        description: "When a user has been reported as spam, gives the coefficient of spam likelihood, comprised between 0 and 1"
        data_tests: 
          - dbt_utils.accepted_range:
              min_value: 0
              max_value: 1
              config:
                where: "spam IS NOT null"  
      - name: spam_reported_at
        data_type: DATE
        description: "When a user has been reported as spam, gives the report date"
      - name: half_signup
        data_type: BOOL
      - name: extended_data
        data_type: TEXT
      - name: age
        data_type: DECIMAL
      - name: age_category
        data_type: TEXT
      - name: half_signup_phone_number
        data_type: TEXT
      - name: half_signup_phone_country
        data_type: TEXT


unit_tests:
  - name: type_check
    description: "Check that the type contains Decidim::User"
    model: int_users
    given:
      - input: ref('stg_decidim_users')
        format: dict
        rows:
          - {id: 1, type: "Decidim::User"}
          - {id: 2, type: "Decidim::Admin"}
          - {id: 3, type: "Decidim::Admin, Decidim::User"}
    expect:
      format: dict
      rows:
          - {id: 1}

  - name: sign_in_frequency_check_multilingual
    description: "Test that the sign-in frequency is properly calculated for Dutch."
    model: int_users
    overrides:
      vars:
        DBT_LANG: 'nl'
    given:
      - input: ref('stg_decidim_users')
        format: dict
        rows:
          - {sign_in_count: 0, type: Decidim::User}
          - {sign_in_count: 1, type: Decidim::User}
          - {sign_in_count: 2, type: Decidim::User}
          - {sign_in_count: 10, type: Decidim::User}
          - {sign_in_count: 11, type: Decidim::User}
    expect:
        format: dict
        rows:
          - {sign_in_frequency: 'Nooit'}
          - {sign_in_frequency: 'Eén keer'}
          - {sign_in_frequency: 'Twee keer'}
          - {sign_in_frequency: 'Tussen 2 en 10 keer'}
          - {sign_in_frequency: 'Meer dan 10 keer'}


  - name: spam_detection_check
    description: "Checks if the presence of spam is correctly parsed or not"
    model: int_users
    given:
      - input: ref('stg_decidim_users')
        format: dict
        rows:
          - {id: 1, type: 'Decidim::User', spam_probability: 0.9994} 
          - {id: 2, type: 'Decidim::User', spam_probability: null}        
    expect:
      format: dict
      rows:
          - {id: 1, spam: "true"}
          - {id: 2, spam: "false"}
  - name: gender_translation_fr
    description: "Test that the gender is translated correctly to French."
    model: int_users
    overrides:
      vars:
        DBT_LANG: 'fr'  
    given:
      - input: ref('stg_decidim_users')
        format: dict
        rows:
          - {id: 1,type: 'Decidim::User', gender: 'male'}
          - {id: 2,type: 'Decidim::User', gender: 'female'}
          - {id: 3,type: 'Decidim::User', gender: 'other'}
          - {id: 4,type: 'Decidim::User', gender: null}  
    expect:
        format: dict
        rows:
          - {id: 1, gender: 'Homme'}
          - {id: 2, gender: 'Femme'}
          - {id: 3, gender: 'Autre'}
          - {id: 4, gender: 'Inconnu'}  
  - name: testing_that_extended_age_data_matches_age_categories
    description: "Checks that age matching fetches the correct infos "
    model: int_users
    given:
      - input: ref('stg_decidim_users')
        format: dict
        rows:
          - {id: 1, date_of_birth: "1943-11-06", type: 'Decidim::User'}
          - {id: 2, date_of_birth: "1958-06-23", type: 'Decidim::User'} 
          - {id: 3, date_of_birth: "1932-05-23", type: 'Decidim::User'} 
          - {id: 4, date_of_birth: "1992-12-01", type: 'Decidim::User'}
          - {id: 5, date_of_birth: null, type: 'Decidim::User'} 
    expect:
        format: dict
        rows:
        - {id: 1, age: 66, age_category: "[65-69 ans]"}
        - {id: 2, age: 51, age_category: "[50-54 ans]"}
        - {id: 3, age: 77, age_category: "[75 ans ou plus]"}
        - {id: 4, age: 17, age_category: "[15-19 ans]"}
        - {id: 5, age: null, age_category: 'Âge non défini'}
    overrides:
     macros:
      dbt_date.today: "'2010-01-01'"

 