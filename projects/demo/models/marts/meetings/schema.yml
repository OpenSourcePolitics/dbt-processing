models:
  - name: meetings
    schema: "{{ env_var('TARGET_SCHEMA') }}"
    description: "Every meeting published on the platform"
    columns:
      - name: id
        description: "The unique identifier for a meeting"
        data_tests:
          - not_null
          - unique
        constraints:
          - type: not_null
          - type: unique
          - type: primary_key
      - name: title
        description: "The title of the meeting"
        data_tests:
          - not_null
        constraints:
          - type: not_null
      - name: description
        description: "A brief description of the meeting"
      - name: address
        description: "The physical or virtual address of the meeting"
      - name: attendees_count
        description: "The total number of attendees at the meeting"
      - name: created_at
        description: "The timestamp when the meeting was created"
        data_tests:
          - not_null
        constraints:
          - type: not_null
      - name: decidim_scope_id
        description: "The identifier of the scope this meeting belongs to"
        constraints:
          - type: not_null
          - type: foreign_key
            expression: "{{ target.schema }}.decidim_scopes (id)"
      - name: decidim_component_id
        description: "The identifier of the component associated with the meeting"
        constraints:
          - type: not_null
          - type: foreign_key
            expression: "{{ target.schema }}.components (id)"
      - name: start_time
        description: "The start time of the meeting"
      - name: end_time
        description: "The end time of the meeting"
      - name: registration_url
        description: "URL for registration for the meeting"
      - name: type_of_meeting
        description: "The type/category of the meeting"
      - name: translated_type_of_meeting
        description: "The translated type of the meeting"
      - name: private_meeting
        description: "Indicates if the meeting is private"
      - name: decidim_author_id
        description: "The ID of the author or organizer of the meeting"
        constraints:
          - type: not_null
          - type: foreign_key
            expression: "{{ target.schema }}.decidim_users (id)"
      - name: resource_type
        description: "The type of resource related to the meeting"
      - name: meeting_url
        description: "The URL to access the meeting"
      - name: categories
        description: "Categories associated with the meeting"
      - name: sub_categories
        description: "Subcategories associated with the meeting"
      - name: categorizations
        description: "The full categorization data (raw) for the meeting"
unit_tests:
  - name: test_url_concatenation
    description: "Check URL concatenation logic"
    model: meetings
    given:
      - input: ref('int_meetings')
        format: dict
        rows:
          - {decidim_component_id: 1, id : 100}       
      - input: ref('components')
        format: dict
        rows:
          - {organization_host: 'host1', ps_space_type_slug: 'space_type_slug1', ps_slug: 'ps_slug1', id: 1, manifest_name: 'meetings'}
      - input: ref("categorizations")
        format: dict
        rows:
          - {categorizable_id : 100}   
    expect:
      format: dict
      rows: 
        - {meeting_url: "https://host1/space_type_slug1/ps_slug1/f/1/meetings/100"}
  - name: test_manifest_name_is_meetings
    description: "Check that manifest name filters on meetings"
    model: meetings
    given:
      - input: ref('int_meetings')
        format: dict
        rows:
          - {decidim_component_id: 1, id : 100} 
          - {decidim_component_id: 2, id : 200}      
      - input: ref('components')
        format: dict
        rows: 
          - {id : 1, manifest_name: 'meetings'} 
          - {id : 2, manifest_name: 'foo'}   
      - input: ref("categorizations")
        format: dict
        rows:
          - {}  
    expect:
      format: dict
      rows: 
        - {id : 100}
  
